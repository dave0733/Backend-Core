// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Metoken {
  address String
  name    String
  symbol  String
}

type Service {
  orbisId     String
  name        String
  description String
  cost        Float
  token       String
}

enum TransactionType {
  BUY
  SELL
  SPEND
}

enum Role {
  ADMIN
  USER
  GUEST
}

model PublicProfile {
  // DB Relations
  user        User      @relation(fields: [userId], references: [id])
  // Keys (id and other uniques)
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @unique @db.ObjectId
  // DB Fields
  address     String    @unique
  ens         String
  username    String
  description String
  pfp         String
  cover       String
  services    Service[]
  metoken     Metoken
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
}

model User {
  // DB Relations
  publicProfile    PublicProfile?
  // Keys (id and other uniques)
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  // DB Fields
  role             Role
  address          String         @unique
  email            String
  isPriorityUser   Boolean        @default(false)
  priorityRank     Int            @default(-1)
  messageThreshold Int            @default(0)
  gateToken        String         @default("DAI")
  notifications    String[]
  oneTimeKey       String
  attributes       Json           @default("{}")
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
}

model Transaction {
  // DB Relations
  // Keys (id and other uniques)
  id      String          @id @default(auto()) @map("_id") @db.ObjectId
  // DB Fields
  to      String
  from    String
  hash    String          @unique
  chainId Int
  status  String
  type    TransactionType
}

model admins {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime
  address   String
  addedBy   String
}

model priorityusers {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime
  address   String
  addedBy   String
  rank      Int
}

model transactions {
  // DB Relations
  // Keys (id and other uniques)
  id      String          @id @default(auto()) @map("_id") @db.ObjectId
  // DB Fields
  to      String
  from    String
  hash    String
  chainId Int
  status  String
  type    TransactionType
}

model users {
  id                      String    @id @default(auto()) @map("_id") @db.ObjectId
  address                 String?
  description             String?
  email                   String?
  name                    String?
  ens                     String?
  metoken                 Metoken?
  notificationPreferences Json?
  message_token_threshold Json?
  did                     String?
  tags                    String[]
  image                   Json?
  background              Json?
  url                     String?
  gate_token              String?
  isAdmin                 Boolean?
  adminAddedBy            String?
  createdAt               DateTime?
  priorityuserAddedBy     String?
  isPriorityUser          Boolean?
  attributes              String?
  rank                    Int?
  updatedAt               Int?
}
